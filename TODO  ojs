adresse zu bitcoininfo anbieten mit
multi_seed -> tx_hash (btc_adress)

die stati für files in datenbank schreiben per cronjob
ausser bei status 3


Zum testen sind die js scripte in ojs/templates/common/minfiedScripts.tpl unter
specific controllers. - ??

2017-03-01

- error-handling on timestamper.js?
+ stamp supplementary files, reviews.
  + show alert to timestamp yourself or that it is done via cronjob later.
+ pass hash directly to server php DAO? write in DB?
+ show timestamp status on authorsSubmissions site. -> smarty var's -> assign on authors page ->


2017-03-08

+ smarty template korrektur
+ button einfügen (zB gelber und grüner haken)

2017-04-01

- cronjob anpassen/ einrichten.
+ link zu originstamp einrichten neben haken.
+ UUID option hinzufügen (siehe mail). TODO: Thomas fragen an was man sieht, dass es geklappt hat.
 - php funktion aufrufen welche uuid in datenbank schreibt für den verzögerten timestamp

- Frage an Thomas: javascript von browser API blockchain.info
    - versuche mit ajax access origin von originstamper.js

:Offline-verifikator:
    blockchainexplorer, api mit allow-access-control

+downloadZip
 +if no seedfile/ there is no zip
 +only testpapersubmission works: names?
 -supplementary files?

+hash direkt in datenbank schreiben originstampUpdaterTest in authorHandler..

- TODO: ein paar artikel löschen -> unübersichtlich

+ originstampVerificator uploaden und testen.

2017-06-06

- datenbankschemen in setup einpflegen für wiederverwendbarkeit (articles, neue?)

2017-06-08
- originstamp updater anpassen (LogInLog)
- übersichtsseite für logins (secEditor, admin) (role nicht vergessen -> egal da rollen redundant sind)
    - roles -> getrole(ROLE_ID_REVIEWER) -> um auszusortieren (vergessen was damit gemeint war)

2017-06-13
- loginlog und query anpassen (join mit user-db) (redundant) validation nicht vergessen.
- downloads timestampen
- cryptSubmitLibrary überall einpflegen (Übersichtlich)
- projektbericht schreiben

Notizen:
table für download timestamp
index, user_id (foreign), ip, download_timestamp, [username, first_name, middle_name, last_name, phone, billing_address, country], originStampStatus,
articleID, (review id?), originTimestamp

CREATE TABLE download_log (
  ID int NOT NULL AUTO_INCREMENT, --auto_increment must be primary key
  PRIMARY KEY (ID),
  user_id bigint(20),
  FOREIGN KEY (user_id) REFERENCES users(user_id), --first create column, then add constraint
  ip varchar(50),
  filename VARCHAR( 30 ) NULL,
  username varchar(20),
  first_name varchar(20),
  middle_name varchar(20),
  last_name varchar(20),
  phone varchar(30),
  billing_address varchar(100),
  country varchar(20),
  article_id bigint(20),
  file_id bigint(20),
  revision bigint(20),
  FOREIGN KEY (article_id) REFERENCES articles(article_id),
  articleHash varchar(30),
  download_timestamp int(10),
  originstampStatus int(2),
  originTimestamp int(10)
);

2017-08-06
Download/Login-Log status.... not working!!!!



index, user_id (foreign), ip, download_timestamp, [username, first_name, middle_name, last_name, phone, billing_address, country](braucht es falls user geändert wird), originStampStatus,
articleID, articleHash, (review id?), originTimestamp,

2017-08-09
- replace "hook" with "tick" in descriptions
- testJournal/index got old description.. search for all descriptions

2017-08-23
- replace second svg in mainDescription without log's
- padding 10px for readability in the divs